// Generated by CoffeeScript 1.10.0
(function() {
  var slice = [].slice;

  App.UI = (function() {
    function UI() {}

    UI.anonymousMode = function() {
      $('#api-mode').text('anonymous');
      $('#github-username').val('');
      $('#github-password').val('');
      $('button#sign-out').hide();
      $('button#sign-in').show();
      $('#github-username').prop('disabled', false);
      $('#github-password').prop('disabled', false);
      $('button#sign-in').prop('disabled', true);
      return $('#github-repo').focus();
    };

    UI.signedInMode = function(username) {
      $('#api-mode').text('authenticated');
      $('button#sign-in').hide();
      $('button#sign-out').show();
      $('#github-username').prop('disabled', true);
      $('#github-password').prop('disabled', true);
      return $('#github-repo').focus();
    };

    UI.showRateInfo = function(rateData) {
      $('#rate-limit').text(rateData.limit);
      return $('#rate-remaining').text(rateData.remaining);
    };

    UI.progress = function(percent) {
      if (percent > 0) {
        this._changeProgress(percent);
        return this.showProgressBar();
      } else {
        this.hideProgressBar();
        return this._changeProgress(percent);
      }
    };

    UI.refreshLog = function(repos) {
      var avgEffectiveness, r, rows, sumEffectiveness;
      rows = (function() {
        var i, len, results;
        results = [];
        for (i = 0, len = repos.length; i < len; i++) {
          r = repos[i];
          results.push(this.tr(this.td(r.name), this.td(r.effectiveness()), this.td('(tbd)')));
        }
        return results;
      }).call(this);
      $('table#log tbody').replaceWith('<tbody>' + rows.join("") + '</tbody>');
      sumEffectiveness = repos.reduce((function(acc, r) {
        return acc + r.effectiveness();
      }), 0);
      avgEffectiveness = Math.round10(sumEffectiveness / repos.length, -1);
      return $('#average-effectiveness').text(avgEffectiveness);
    };

    UI.td = function(text) {
      return "<td class=data>" + text + "</td>";
    };

    UI.tr = function() {
      var cells;
      cells = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      return "<tr>" + cells.join("") + "</tr>";
    };

    UI.showError = function(message) {
      $('#error-text').text(message);
      return $('#error-alert').show();
    };

    UI.hideError = function() {
      return $('#error-alert').hide();
    };

    UI.showProgressBar = function() {
      return $('#progress-display').show();
    };

    UI.hideProgressBar = function() {
      return $('#progress-display').hide();
    };

    UI.showResultsDisplay = function() {
      return $('#results-display').show();
    };

    UI.hideResultsDisplay = function() {
      return $('#results-display').hide();
    };

    UI.showResults = function() {
      return $('#results').show();
    };

    UI.hideResults = function() {
      return $('#results').hide();
    };

    UI._changeProgress = function(percent) {
      return $('.progress-bar').attr('style', 'width: ' + percent + '%');
    };

    return UI;

  })();

}).call(this);
