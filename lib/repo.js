// Generated by CoffeeScript 1.10.0
(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  App.Repo = (function() {
    function Repo(repo_spec, repoCallback, issuesCallback, network) {
      var ref;
      this.repoCallback = repoCallback;
      this.issuesCallback = issuesCallback;
      if (network == null) {
        network = true;
      }
      this.issues = bind(this.issues, this);
      this.pullRequests = bind(this.pullRequests, this);
      this.closedIssueCount = bind(this.closedIssueCount, this);
      this.openIssueCount = bind(this.openIssueCount, this);
      this.closedPullRequestCount = bind(this.closedPullRequestCount, this);
      this.openPullRequestCount = bind(this.openPullRequestCount, this);
      this.fetchIssues = bind(this.fetchIssues, this);
      this.fetchData = bind(this.fetchData, this);
      ref = repo_spec.split('/'), this.acct = ref[0], this.name = ref[1];
      this.rawdata = {};
      if (network) {
        this.fetchData();
      }
    }

    Repo.prototype.fetchData = function() {
      return App.octo.repos(this.acct, this.name).fetch((function(_this) {
        return function(err, repodata) {
          if (err) {
            return console.log(err);
          } else {
            _this.rawdata.repo = repodata;
            _this.repoCallback(_this);
            return _this.fetchIssues(_this.rawdata.repo);
          }
        };
      })(this));
    };

    Repo.prototype.fetchIssues = function(repo) {
      var options;
      options = {
        state: 'all',
        since: App.Github.oneMonthAgo()
      };
      return fetchAll(repo.issues.fetch, options).then((function(_this) {
        return function(issues) {
          _this.rawdata.issues = issues;
          return _this.issuesCallback(_this);
        };
      })(this));
    };

    Repo.prototype.openPullRequestCount = function() {
      return this.pullRequests().filter(function(pr) {
        return pr.state === 'open';
      }).length;
    };

    Repo.prototype.closedPullRequestCount = function() {
      return this.pullRequests().filter(function(pr) {
        return pr.state === 'closed';
      }).length;
    };

    Repo.prototype.openIssueCount = function() {
      return this.issues().filter(function(i) {
        return i.state === 'open';
      }).length;
    };

    Repo.prototype.closedIssueCount = function() {
      return this.issues().filter(function(i) {
        return i.state === 'closed';
      }).length;
    };

    Repo.prototype.pullRequests = function() {
      return this.rawdata.issues.filter(function(x) {
        return typeof x.pullRequest === 'object';
      });
    };

    Repo.prototype.issues = function() {
      return this.rawdata.issues.filter(function(x) {
        return typeof x.pullRequest === 'undefined';
      });
    };

    return Repo;

  })();

}).call(this);
