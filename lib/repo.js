// Generated by CoffeeScript 1.10.0
(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  App.Repo = (function() {
    function Repo(repo_spec, accessNetwork) {
      var ref;
      if (accessNetwork == null) {
        accessNetwork = true;
      }
      this.fetchIssues = bind(this.fetchIssues, this);
      this.fetchData = bind(this.fetchData, this);
      ref = repo_spec.split('/'), this.acct = ref[0], this.name = ref[1];
      this.rawdata = {};
      if (accessNetwork) {
        this.fetchData();
      }
    }

    Repo.prototype.fetchData = function() {
      return App.octo.repos(this.acct, this.name).fetch((function(_this) {
        return function(err, repodata) {
          if (err) {
            return console.log(err);
          } else {
            _this.rawdata.repo = repodata;
            return _this.fetchIssues(_this.rawdata.repo);
          }
        };
      })(this));
    };

    Repo.prototype.fetchIssues = function(repo) {
      var options;
      options = {
        state: 'open',
        since: App.Github.oneMonthAgo()
      };
      fetchAll(repo.issues.fetch, options).then((function(_this) {
        return function(issues) {
          return _this.rawdata.openIssues = issues;
        };
      })(this));
      options.state = 'closed';
      return fetchAll(repo.issues.fetch, options).then((function(_this) {
        return function(issues) {
          return _this.rawdata.closedIssues = issues;
        };
      })(this));
    };

    return Repo;

  })();

}).call(this);
